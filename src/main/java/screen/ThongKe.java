/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package screen;

import com.mycompany.shop.dao.thong_ke_dao;
import com.mycompany.shop.util.CurrencyUtils;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;

/**
 *
 * @author nguyenthanhquoc
 */
public class ThongKe extends javax.swing.JPanel {

        private thong_ke_dao thongKeDAO;
        private DefaultTableModel modelSanPhamBanChay;
        private DefaultTableModel modelKhachHangTop;
        private DefaultTableModel modelTonKho;
        private DefaultTableModel modelDoanhThuChiTiet;

        // Date range variables
        private Date ngayBatDau = null;
        private Date ngayKetThuc = null;

        /**
         * Creates new form ThongKe
         */
        public ThongKe() {
                initComponents();
                initDAO();
                initTables();
                loadThongKe();
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTabbedPane2 = new javax.swing.JTabbedPane();

        jLabel22.setText("jLabel22");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DOANH THU THÁNG");

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Thành công: ");

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Đơn hàng");

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Hủy:");

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("0");

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(285, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DOANH THU NGÀY");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("0");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Thành công: ");

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("0");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Đơn hàng");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Hủy:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33))
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 237, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TỔNG ĐƠN HÀNG");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Đơn hàng");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Thành công: ");

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Hủy:");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("0");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 236, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Loại thời gian: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hôm nay", "Chọn ngày" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

        private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
                String selectedOption = (String) jComboBox1.getSelectedItem();

                if ("Chọn ngày".equals(selectedOption)) {
                        // Hiển thị dialog chọn khoảng thời gian
                        showDateRangeDialog();
                } else {
                        // Reset về hôm nay
                        ngayBatDau = null;
                        ngayKetThuc = null;
                        updateDateRangeLabel();
                        loadThongKe();
                }
        }// GEN-LAST:event_jComboBox1ActionPerformed

        // Show date range selection dialog
        private void showDateRangeDialog() {
                javax.swing.JPanel panel = new javax.swing.JPanel(new java.awt.GridBagLayout());
                java.awt.GridBagConstraints gbc = new java.awt.GridBagConstraints();
                gbc.insets = new java.awt.Insets(5, 5, 5, 5);

                // Ngày bắt đầu
                gbc.gridx = 0;
                gbc.gridy = 0;
                panel.add(new javax.swing.JLabel("Ngày bắt đầu:"), gbc);

                gbc.gridx = 1;
                javax.swing.JTextField txtStartDate = new javax.swing.JTextField(12);
                if (ngayBatDau != null) {
                        txtStartDate.setText(ngayBatDau.toString());
                } else {
                        txtStartDate.setText(Date.valueOf(LocalDate.now()).toString());
                }
                panel.add(txtStartDate, gbc);

                // Ngày kết thúc
                gbc.gridx = 0;
                gbc.gridy = 1;
                panel.add(new javax.swing.JLabel("Ngày kết thúc:"), gbc);

                gbc.gridx = 1;
                javax.swing.JTextField txtEndDate = new javax.swing.JTextField(12);
                if (ngayKetThuc != null) {
                        txtEndDate.setText(ngayKetThuc.toString());
                } else {
                        txtEndDate.setText(Date.valueOf(LocalDate.now()).toString());
                }
                panel.add(txtEndDate, gbc);

                // Thêm hướng dẫn
                gbc.gridx = 0;
                gbc.gridy = 2;
                gbc.gridwidth = 2;
                javax.swing.JLabel lblHint = new javax.swing.JLabel("<html><i>Ví dụ: 2024-01-15</i></html>");
                lblHint.setForeground(java.awt.Color.GRAY);
                panel.add(lblHint, gbc);

                int result = javax.swing.JOptionPane.showConfirmDialog(
                                this, panel, "Chọn khoảng thời gian",
                                javax.swing.JOptionPane.OK_CANCEL_OPTION,
                                javax.swing.JOptionPane.PLAIN_MESSAGE);

                if (result == javax.swing.JOptionPane.OK_OPTION) {
                        try {
                                String startDateStr = txtStartDate.getText().trim();
                                String endDateStr = txtEndDate.getText().trim();

                                Date startDate = Date.valueOf(startDateStr);
                                Date endDate = Date.valueOf(endDateStr);

                                if (startDate.after(endDate)) {
                                        javax.swing.JOptionPane.showMessageDialog(this,
                                                        "Ngày bắt đầu không thể sau ngày kết thúc!",
                                                        "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
                                        // Reset về "Hôm nay"
                                        jComboBox1.setSelectedIndex(0);
                                        return;
                                }

                                ngayBatDau = startDate;
                                ngayKetThuc = endDate;

                                // Cập nhật label hiển thị khoảng thời gian
                                updateDateRangeLabel();

                                loadThongKe();

                        } catch (IllegalArgumentException e) {
                                javax.swing.JOptionPane.showMessageDialog(this,
                                                "Định dạng ngày không hợp lệ! Vui lòng nhập theo định dạng yyyy-MM-dd",
                                                "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
                                // Reset về "Hôm nay"
                                jComboBox1.setSelectedIndex(0);
                        }
                } else {
                        // User cancelled, reset to "Hôm nay"
                        jComboBox1.setSelectedIndex(0);
                }
        }

        // Initialize DAO
        private void initDAO() {
                thongKeDAO = new thong_ke_dao();
        }

        // Update date range label display
        private void updateDateRangeLabel() {
                if (ngayBatDau != null && ngayKetThuc != null) {
                        // Cập nhật text của jLabel21 để hiển thị khoảng thời gian
                        String dateRangeText = "Từ " + ngayBatDau.toString() + " đến " + ngayKetThuc.toString();
                        jLabel21.setText(dateRangeText);
                } else {
                        // Reset về text mặc định
                        jLabel21.setText("Loại thời gian: ");
                }
        }

        // Debug method để test khách hàng VIP
        private void debugKhachHangVIP() {
                System.out.println("=== DEBUG KHÁCH HÀNG VIP ===");

                // Test dữ liệu cơ bản trước
                thongKeDAO.testKhachHangData();

                try {
                        List<Map<String, Object>> data = thongKeDAO.getTopKhachHang(10);
                        System.out.println("Số khách hàng VIP tìm được: " + data.size());

                        for (Map<String, Object> item : data) {
                                System.out.println("Khách: " + item.get("ten_khach") +
                                                " - SĐT: " + item.get("sdt_khach") +
                                                " - Số đơn: " + item.get("so_don") +
                                                " - Tổng chi tiêu: " + item.get("tong_chi_tieu"));
                        }
                } catch (Exception e) {
                        System.err.println("Lỗi debug khách hàng VIP: " + e.getMessage());
                        e.printStackTrace();
                }
        }

        // Initialize tables for TabbedPane
        private void initTables() {
                // Tạo các tab cho TabbedPane
                createSanPhamBanChayTab();
                createKhachHangTopTab();
                createTonKhoTab();
                createDoanhThuChiTietTab();
        }

        // Load thống kê chính
        private void loadThongKe() {
                LocalDate today = LocalDate.now();
                Date currentDate = Date.valueOf(today);

                if (ngayBatDau != null && ngayKetThuc != null) {
                        // Sử dụng khoảng thời gian được chọn
                        loadThongKeByDateRange();
                } else {
                        // Sử dụng thống kê mặc định (hôm nay)
                        loadThongKeDefault(today, currentDate);
                }

                // Load dữ liệu cho các tab
                loadSanPhamBanChayData();
                loadKhachHangTopData();
                loadTonKhoData();
                loadDoanhThuChiTietData();
        }

        // Load thống kê mặc định
        private void loadThongKeDefault(LocalDate today, Date currentDate) {
                // Cập nhật thống kê tổng đơn hàng
                int tongDonHang = thongKeDAO.getTongDonHang();
                jLabel8.setText(String.valueOf(tongDonHang)); // Thành công
                jLabel9.setText("0"); // Hủy (tạm thời để 0)

                // Cập nhật thống kê đơn hàng theo ngày
                int donHangNgay = thongKeDAO.getDonHangTheoNgay(currentDate);
                jLabel13.setText(String.valueOf(donHangNgay)); // Thành công
                jLabel14.setText("0"); // Hủy (tạm thời để 0)

                // Cập nhật thống kê đơn hàng theo tháng
                int donHangThang = thongKeDAO.getDonHangTheoThang(today.getMonthValue(), today.getYear());
                jLabel18.setText(String.valueOf(donHangThang)); // Thành công
                jLabel19.setText("0"); // Hủy (tạm thời để 0)

                // Cập nhật doanh thu năm
                // long doanhThuNam = thongKeDAO.getDoanhThuTheoNam(today.getYear());
                // jLabel20.setText(CurrencyUtils.formatVND((int) doanhThuNam));
        }

        // Load thống kê theo khoảng thời gian
        private void loadThongKeByDateRange() {
                // Cập nhật thống kê tổng đơn hàng trong khoảng thời gian
                int tongDonHang = thongKeDAO.getDonHangTheoKhoangThoiGian(ngayBatDau, ngayKetThuc);
                jLabel8.setText(String.valueOf(tongDonHang)); // Thành công
                jLabel9.setText("0"); // Hủy (tạm thời để 0)

                // Cập nhật thống kê đơn hàng theo ngày (sử dụng ngày bắt đầu)
                int donHangNgay = thongKeDAO.getDonHangTheoNgay(ngayBatDau);
                jLabel13.setText(String.valueOf(donHangNgay)); // Thành công
                jLabel14.setText("0"); // Hủy (tạm thời để 0)

                // Cập nhật thống kê đơn hàng theo tháng (sử dụng tháng của ngày bắt đầu)
                LocalDate startLocalDate = ngayBatDau.toLocalDate();
                int donHangThang = thongKeDAO.getDonHangTheoThang(startLocalDate.getMonthValue(),
                                startLocalDate.getYear());
                jLabel18.setText(String.valueOf(donHangThang)); // Thành công
                jLabel19.setText("0"); // Hủy (tạm thời để 0)

                // Cập nhật doanh thu trong khoảng thời gian
                long doanhThuKhoang = thongKeDAO.getDoanhThuTheoKhoangThoiGian(ngayBatDau, ngayKetThuc);
                // jLabel20.setText(CurrencyUtils.formatVND((int) doanhThuKhoang));
        }

        // Create tabs for TabbedPane
        private void createSanPhamBanChayTab() {
                javax.swing.JPanel panel = new javax.swing.JPanel(new java.awt.BorderLayout());

                // Tạo bảng sản phẩm bán chạy
                modelSanPhamBanChay = new DefaultTableModel();
                modelSanPhamBanChay
                                .setColumnIdentifiers(new String[] { "Mã SP", "Tên SP", "Số lượng bán", "Doanh thu" });

                javax.swing.JTable table = new javax.swing.JTable(modelSanPhamBanChay);
                javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(table);

                panel.add(scrollPane, java.awt.BorderLayout.CENTER);
                jTabbedPane2.addTab("Sản phẩm bán chạy", panel);
        }

        private void createKhachHangTopTab() {
                javax.swing.JPanel panel = new javax.swing.JPanel(new java.awt.BorderLayout());

                // Tạo bảng khách hàng top
                modelKhachHangTop = new DefaultTableModel();
                modelKhachHangTop.setColumnIdentifiers(
                                new String[] { "Tên khách hàng", "SĐT", "Số đơn", "Tổng chi tiêu" });

                javax.swing.JTable table = new javax.swing.JTable(modelKhachHangTop);
                javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(table);

                panel.add(scrollPane, java.awt.BorderLayout.CENTER);
                jTabbedPane2.addTab("Khách hàng VIP", panel);
        }

        private void createTonKhoTab() {
                javax.swing.JPanel panel = new javax.swing.JPanel(new java.awt.BorderLayout());

                // Tạo bảng tồn kho
                modelTonKho = new DefaultTableModel();
                modelTonKho.setColumnIdentifiers(new String[] { "Mã SP", "Tên SP", "Số lượng", "Trạng thái" });

                javax.swing.JTable table = new javax.swing.JTable(modelTonKho);
                javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(table);

                panel.add(scrollPane, java.awt.BorderLayout.CENTER);
                jTabbedPane2.addTab("Tồn kho", panel);
        }

        private void createDoanhThuChiTietTab() {
                javax.swing.JPanel panel = new javax.swing.JPanel(new java.awt.BorderLayout());

                // Tạo bảng doanh thu chi tiết
                modelDoanhThuChiTiet = new DefaultTableModel();
                modelDoanhThuChiTiet.setColumnIdentifiers(new String[] { "Thời gian", "Doanh thu", "Số đơn" });

                javax.swing.JTable table = new javax.swing.JTable(modelDoanhThuChiTiet);
                javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(table);

                panel.add(scrollPane, java.awt.BorderLayout.CENTER);
                jTabbedPane2.addTab("Doanh thu chi tiết", panel);
        }

        // Load data methods
        private void loadSanPhamBanChayData() {
                modelSanPhamBanChay.setRowCount(0);
                List<Map<String, Object>> data;

                if (ngayBatDau != null && ngayKetThuc != null) {
                        System.out.println("Loading sản phẩm bán chạy theo khoảng thời gian: " + ngayBatDau + " đến "
                                        + ngayKetThuc);
                        data = thongKeDAO.getTopSanPhamBanChayTheoKhoangThoiGian(ngayBatDau, ngayKetThuc, 10);
                } else {
                        System.out.println("Loading sản phẩm bán chạy tổng thể");
                        data = thongKeDAO.getTopSanPhamBanChay(10);
                }

                System.out.println("Số sản phẩm bán chạy tìm được: " + data.size());

                for (Map<String, Object> item : data) {
                        modelSanPhamBanChay.addRow(new Object[] {
                                        item.get("ma_ao"),
                                        item.get("ten_ao"),
                                        item.get("so_luong_ban"),
                                        CurrencyUtils.formatVND(((Long) item.get("doanh_thu")).intValue())
                        });
                }
        }

        private void loadKhachHangTopData() {
                modelKhachHangTop.setRowCount(0);

                // Debug để kiểm tra dữ liệu
                debugKhachHangVIP();

                List<Map<String, Object>> data;

                if (ngayBatDau != null && ngayKetThuc != null) {
                        data = thongKeDAO.getTopKhachHangTheoKhoangThoiGian(ngayBatDau, ngayKetThuc, 10);
                } else {
                        data = thongKeDAO.getTopKhachHang(10);
                }

                System.out.println("Số dữ liệu khách hàng VIP load được: " + data.size());

                for (Map<String, Object> item : data) {
                        modelKhachHangTop.addRow(new Object[] {
                                        item.get("ten_khach"),
                                        item.get("sdt_khach"),
                                        item.get("so_don"),
                                        CurrencyUtils.formatVND(((Long) item.get("tong_chi_tieu")).intValue())
                        });
                }
        }

        private void loadTonKhoData() {
                modelTonKho.setRowCount(0);
                List<Map<String, Object>> data = thongKeDAO.getThongKeTonKho();

                for (Map<String, Object> item : data) {
                        modelTonKho.addRow(new Object[] {
                                        item.get("ma_ao"),
                                        item.get("ten_ao"),
                                        item.get("so_luong"),
                                        item.get("trang_thai")
                        });
                }
        }

        private void loadDoanhThuChiTietData() {
                modelDoanhThuChiTiet.setRowCount(0);
                LocalDate today = LocalDate.now();

                // Load doanh thu theo tháng trong năm hiện tại
                List<Map<String, Object>> data = thongKeDAO.getDoanhThuTheoThangTrongNam(today.getYear());

                for (Map<String, Object> item : data) {
                        String thangText = "Tháng " + item.get("thang") + "/" + today.getYear();
                        modelDoanhThuChiTiet.addRow(new Object[] {
                                        thangText,
                                        CurrencyUtils.formatVND(((Long) item.get("doanh_thu")).intValue()),
                                        item.get("so_don")
                        });
                }
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables
}
